#!/bin/bash

clear
cd ~
read -p "Enter the project name: " projectName
username="$projectName"
projectRoot="$HOME/containers/projects/$projectName"

# Check if this project or user already exists
if [ -d "$projectRoot" ]; then
  echo "Project $projectName already exists."
  exit 1
fi
if id "$projectName" &>/dev/null; then
  echo "User $projectName already exists."
  exit 1
fi

# Create a new linux user associated to this project workspace
echo "Creating user $username ..."
adduser --disabled-password --gecos "" $username > /dev/null 2>&1

# Create the project directory structure
echo "Creating project and user directory ..."
mkdir -p $projectRoot/{builds,branches,data,keys}
chown root:$username $projectRoot/{builds,branches,data}
chmod 770 $projectRoot/{builds,branches,data}
# Set permissions for the keys directory to be root-only
chown root:root $projectRoot/keys
chmod 700 $projectRoot/keys
# Link workspace to user home
mkdir -p /home/$username/.ssh
mkdir -p /home/$username/containers/projects
ln -s $projectRoot /home/$username/containers/projects/
chown -h $username:$username /home/$username
# Generate SSH key pair
echo "Creating SSH keypair ..."
ssh-keygen -t ed25519 -f $projectRoot/keys/${username} -N "" > /dev/null 2>&1
# Add the public key to the user's authorized_keys
cat $projectRoot/keys/${username}.pub >> /home/$username/.ssh/authorized_keys
# Set appropriate permissions for the .ssh directory and authorized_keys file
chown -R $username:$username /home/$username/.ssh
chmod 700 /home/$username/.ssh
chmod 600 /home/$username/.ssh/authorized_keys

echo ""
echo "Project $projectName created âœ¨"