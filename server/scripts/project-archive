#!/bin/bash

clear
cd ~
read -p "Enter the project name: " projectName
username="$projectName"
userProjectPath="/home/$username"
rootProjectPath="$HOME/containers/projects/$projectName"
currentDate=$(date +%F)
archivePath="$HOME/archives/${projectName}-${currentDate}.tar.gz"

# Check if this project exists
if [ ! -d "$userProjectPath" ]; then
  echo "Project $projectName not found."
  exit 1
fi

echo ""
echo "Are you sure you want to remove the project $projectName ?"
echo "- User $username and its home directory will be removed"
echo "- All docker compose related to this project will be down"
echo "- All data in /builds will be permanently removed"
echo "- All data in /branches will be permanently removed"
echo "- Directories /data and /keys will be archived into ~/archives"
echo "This action cannot be undone."
echo ""
read -p "Type 'archive' to confirm: " confirm
if [ "$confirm" != "archive" ]; then
  exit 1
fi
echo ""

echo "Stopping running containers ..."
find "$userProjectPath/builds" \( -name "docker-compose.yaml" -o -name "docker-compose.yml" \) | while read -r file; do
  dir=$(dirname "$file")
  echo "- $dir ..."
  (cd "$dir" && docker compose down) > /dev/null 2>&1
done

echo "Archiving project data and keys ..."
mkdir -p "$HOME/archives"
tar -czvf "$archivePath" -C "$userProjectPath" data -C "$rootProjectPath" keys > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Failed to archive project data and keys. Exiting."
  exit 1
fi

echo "Removing user $username ..."
deluser --remove-home $username > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Failed to remove user or project directory. Exiting."
  exit 1
fi

echo "Removing directories ..."
rm -rf "$userProjectPath" > /dev/null 2>&1
rm -rf "$rootProjectPath" > /dev/null 2>&1

echo ""
echo "Project $projectName archived successfully."
echo $archivePath
